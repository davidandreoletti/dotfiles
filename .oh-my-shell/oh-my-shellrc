# Profile shell loading entry point
# - env var set to enable profiling
#SHELLRC_PROFILE_SPEED=0

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

SHELLRC_ROOT_DIR="${HOME}/.oh-my-shell"
SHELLRC_SHELLRC_DIR="${SHELLRC_ROOT_DIR}/shellrc"
SHELLRC_BOOTSTRAP_DIR="${SHELLRC_SHELLRC_DIR}/bootstrap"

export SHELLRC_OH_MY_SHELLRC="${SHELLRC_ROOT_DIR}/oh-my-shellrc"

export DOTFILES_HOME_LOCAL=$(realpath "$(dirname $(readlink -f $SHELLRC_OH_MY_SHELLRC))/../")
export DOTFILES_PRIVATE_HOME_LOCAL="$(dirname $(readlink -f $HOME/.ssh))"

export SHELLRC_PLUGINS_DIR="${SHELLRC_SHELLRC_DIR}/plugins"
export SHELLRC_PLUGINS_DIR_LOCAL="${DOTFILES_HOME_LOCAL}/.oh-my-shell/shellrc/plugins"

# Load bootstrap
. "${SHELLRC_BOOTSTRAP_DIR}/helper.sh"
dot_if_exists "${SHELLRC_BOOTSTRAP_DIR}/helper2.sh"
dot_if_exists "${SHELLRC_BOOTSTRAP_DIR}/helper3.sh"
dot_if_exists "${SHELLRC_BOOTSTRAP_DIR}/helper4.sh"
dot_if_exists "${SHELLRC_BOOTSTRAP_DIR}/init.sh"

# Export HOMEBREW_PACKAGES_INSTALL_DIR_PREFIX (can't be cached from within Posix shell function)
homebrew_init
export HOMEBREW_PACKAGES_INSTALL_DIR_PREFIX=$(homebrew_packages_path_prefix)

# Load shell plugins (part 1)
dot_current_shell_plugin_if_exists "environment"
dot_current_shell_plugin_if_exists "history"

__startTime=$(_timeNow)

# Load app plugins 
dot_plugin_if_exists "common"
dot_plugin_if_exists "locale"
dot_plugin_if_exists "gnuwhich"                     # Expose standard GNU tools, including to .oh-my-shellrc
dot_plugin_if_exists "gnucoreutils"                 # Expose standard GNU tools, including to .oh-my-shellrc
dot_plugin_if_exists "gnufindutils"                 # Expose other GNU tools, including to .oh-my-shellrc
dot_plugin_if_exists "inetutils"                    # Expose other GNU tools, including to .oh-my-shellrc
dot_plugin_if_exists "util_linux"                   # Expose other linux tools, including to .oh-my-shellrc
dot_plugin_if_exists "dotfiles"                     # Expose DOTFILES_HOME, DOTFILES_PRIVATE_HOME to other plugins
dot_plugin_if_exists "android"
dot_plugin_if_exists "administrator"
dot_plugin_if_exists "rustup"
dot_plugin_if_exists "cargo"                        # Depends on: rustup. Exposes function to install rust applications from crates
dot_plugin_if_exists "ai"
dot_plugin_if_exists "alacritty"
dot_plugin_if_exists "asdf"
dot_plugin_if_exists "archive"
dot_plugin_if_exists "alias_"
dot_plugin_if_exists "backup"
dot_plugin_if_exists "dd"
dot_plugin_if_exists "dropbox"
dot_plugin_if_exists "dns"
dot_plugin_if_exists "buku"                         # Depends on: dropbox
dot_plugin_if_exists "cat"
dot_plugin_if_exists "cd"
dot_plugin_if_exists "chars"
dot_plugin_if_exists "colima"
dot_plugin_if_exists "cron"
dot_plugin_if_exists "date"
dot_plugin_if_exists "development"
dot_plugin_if_exists "debugging_shell_scripts"
dot_plugin_if_exists "diff"
dot_plugin_if_exists "docker"
dot_plugin_if_exists "download"
dot_plugin_if_exists "age"
dot_plugin_if_exists "environment"
dot_plugin_if_exists "family"
dot_plugin_if_exists "file_directory"
dot_plugin_if_exists "fzf"
dot_plugin_if_exists "gcc"
dot_plugin_if_exists "git"
dot_plugin_if_exists "github"
dot_plugin_if_exists "gig"
dot_plugin_if_exists "google_cloud_sdk"
dot_plugin_if_exists "gnused"
dot_plugin_if_exists "gnupg"
dot_plugin_if_exists "gdb"
dot_plugin_if_exists "goenv"
dot_plugin_if_exists "launchd"
dot_plugin_if_exists "libiconv"
dot_plugin_if_exists "lsof"
dot_plugin_if_exists "history"
dot_plugin_if_exists "homebrew"
dot_plugin_if_exists "homelab"
dot_plugin_if_exists "image"
dot_plugin_if_exists "id"
dot_plugin_if_exists "iamb"
dot_plugin_if_exists "java"
dot_plugin_if_exists "kubernetes"                   # Requires: gnucoreutils
dot_plugin_if_exists "fastlane"
dot_plugin_if_exists "ls"
dot_plugin_if_exists "man"
dot_plugin_if_exists "mpd"
dot_plugin_if_exists "misc"
dot_plugin_if_exists "minikube"
dot_plugin_if_exists "music"                        # Requires: homelab
dot_plugin_if_exists "mv"
dot_plugin_if_exists "navi"
dot_plugin_if_exists "network"
#dot_plugin_if_exists "nvm"                          # Node.js environment manager    FIXME: remove plugin
dot_plugin_if_exists "notebook"                      # Requires: dotfiles plugin
dot_plugin_if_exists "nnn"                           
dot_plugin_if_exists "open"
dot_plugin_if_exists "oraclecloud"
dot_plugin_if_exists "ots"
dot_plugin_if_exists "pipe"
dot_plugin_if_exists "pdf"
dot_plugin_if_exists "pcalc"
dot_plugin_if_exists "process"
dot_plugin_if_exists "progress"
dot_plugin_if_exists "postgres"
dot_plugin_if_exists "python"
dot_plugin_if_exists "pipx"
dot_plugin_if_exists "poetry"                        # Requires: pipx
dot_plugin_if_exists "pyenv"
dot_plugin_if_exists "qemu"
dot_plugin_if_exists "rbenv"
dot_plugin_if_exists "ripgrep"
dot_plugin_if_exists "rm"
dot_plugin_if_exists "rsync"
dot_plugin_if_exists "sharefile"
dot_plugin_if_exists "self"
dot_plugin_if_exists "search"
dot_plugin_if_exists "shell"
dot_plugin_if_exists "shellrc"
dot_plugin_if_exists "shorturl"
dot_plugin_if_exists "ssh"
dot_plugin_if_exists "sudo"
dot_plugin_if_exists "smartmontools"
dot_plugin_if_exists "system"
dot_plugin_if_exists "tail"
dot_plugin_if_exists "tasklog"
dot_plugin_if_exists "telnet"
dot_plugin_if_exists "termbin"
dot_plugin_if_exists "tldr"
dot_plugin_if_exists "ftenv"
dot_plugin_if_exists "timemachine"
dot_plugin_if_exists "translate"
dot_plugin_if_exists "tmux"
dot_plugin_if_exists "tree"
dot_plugin_if_exists "touchbar"
dot_plugin_if_exists "tut"
dot_plugin_if_exists "tz"
dot_plugin_if_exists "thokr"
dot_plugin_if_exists "unixpermission"
dot_plugin_if_exists "vim"
dot_plugin_if_exists "neovim"
dot_plugin_if_exists "vivid"
dot_plugin_if_exists "volta"
dot_plugin_if_exists "vnc"
dot_plugin_if_exists "javascript"                          # Loading dependency: volta plugin 
dot_plugin_if_exists "weather"
dot_plugin_if_exists "whence"
dot_plugin_if_exists "xcode"
dot_plugin_if_exists "yewtube"
dot_plugin_if_exists "z"
dot_plugin_if_exists "zip"
dot_plugin_if_exists "zoxide"
dot_plugin_if_exists "zshbench"
dot_plugin_if_exists "libvirt"
dot_plugin_if_exists "boris"
dot_plugin_if_exists "conda"
dot_plugin_if_exists "starship" # Must be near the end of the shell initialization

# Load shell plugins (part 2)
dot_current_shell_plugin_if_exists "completions" # Requires: gnucoreutils 
dot_delayed_plugins_step_if_exists "completions" 1
dot_current_shell_plugin_if_exists "correction"
dot_current_shell_plugin_if_exists "custom"

# Load app/shell plugin (part 3)
dot_delayed_plugins_step_if_exists "post" 0

# Load <computer,user> shell specific config
dot_if_exists "${HOME}/.shellrc.sh"

__endTime=$(_timeNow)
__runtime=$(_timeInterval $__startTime $__endTime)
_reportIfSlowerThan "oh-my-shell" "loading" "total" $__runtime 1000

