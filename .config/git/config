[core]
    fileMode = true
    editor = vim
    excludesFile = ~/.config/git/ignore
    quotePath = true
    logAllRefUpdates = true
    trustctime = true

	# Centralized Git hooks
	# Requires git 2.9+
	hooksPath = ~/.config/git/hooks
    # Default pager 
    pager = "~/bin/git-pager.sh simple"

[pager]
    # Color
	diff = "~/bin/git-pager.sh diff"
    log =  "~/bin/git-pager.sh simple"
    show = "~/bin/git-pager.sh simple"

[interactive]
    diffFilter = "~/bin/git-pager.sh diff"

[push]
    # Push CURRENT branch to upstream branch
    # - works if both branchs have different names or same names
    # http://longair.net/blog/2011/02/27/an-asymmetry-between-git-pull-and-git-push/
    default = "upstream"
    # Push tags assoctiod to the pushed branch
    # - equivalent to --follow-tags 
    followTags = true

[color]
    # By default, all non machine oriented outputs are colored
    # - terminal output will be colored
    ui = auto
    # Diff outputs are always colored
    # Required by:
    # - diff-highlight
    diff = auto

[color "diff-highlight"]
    # Hightligh modified words in diff's output
    # https://www.viget.com/articles/dress-up-your-git-diffs-with-word-level-highlights/
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22
     
[credential]
    helper = osxkeychain

[diff "spaceman-diff"]
    # Diff images as ASCII like images
    # spaceman-diff is expected to be on the $PATH
    command = spaceman-diff

[branch]
    # By default, "git pull" will REBASE (instead merge) the local branch created with "git checkout" / "git branch" when the local branche tracking these branches:
    # - remote branches 
    # - local branches
    autoSetupRebase = always
    # By default, track branches created with "git checkout" / "git branch" when starting from these branches:
    # - remote branches 
    # - local branches 
    autoSetupMerge = always

[pull]
    # Rebase branches on top of the fetched branch, instead of merging the default branch from the default remote when "git pull" is run.
    # - preserve: flatten locally commited merge commits when calling "git pull"
    # -- "git rebase --preserve-merges":
    # --- call it so that locally committed merge commits are not be flattened by running git pull.
    # --- BUT DANGEROUS, read https://git-scm.com/docs/git-rebase#_bugs first.
    rebase = preserve

[merge]
    # Merge conflict tool, in order of preference
    # Defaults: git mergetool --tool-help
    tool = opendiff,vimdiff
    # Show common ancestor in conflicts markers
    # - text in between ||||||| marker and ======= marker represent the command ancestor code
    conflictstyle = diff3

[diff]
    # Produce diff using patience algorithm with additional support for "low-occurrence common elements"
    # - Net result is diff are, generally, more intuitive; it reconciles better the misaligned brackets in functions and tags.
    algorithm = histogram
    # git diff detects renames and copies
    renames = copies
    # Number of lines of context in patches
    context = 6

[mergetool]
    # Delete merge backup files (as .orig files)
    # After performing a merge, the original file with conflict markers can be saved as a file with a .orig extension. 
    keepBackup = false
    # Do not prompt before each invocation of the merge resolution program
    prompt = false

[repack]
    # Use delta offset when repacking 
    # Requires: git 1.4.4+
    usedeltabaseoffset = true

[help]
    # Show correct command version but do not exectude it when mistyped
    autocorrect = 0

[rerere]
    # Enable rerere by default (instead of on first use of git rerere)
    enabled = true

[status]
    # Show relative path, relative to current directory (instead of repository root)
    relativePaths = true
    # Show submodule status
    submodulesummary = true

[tag]
    sort = version:refname

[user]
    # Explicitly require user.name / user.email to be set
    useConfigOnly = true

[init]
    templatedir = ~/.config/git/templates

[include]
    # Notes: Includes directives require git 1.7.10+

    #
    # Misc
    #
    path = ~/.gitconfig_custom

    #
    # Aliases
    #

    # Popular git aliases
    path = ~/.config/git/aliases/gitaliases
    # Personal but common git aliases
    path = ~/.config/git/aliases/common
    # Custom git aliases (per profile)
    path = ~/.gitconfig_aliases_custom 

