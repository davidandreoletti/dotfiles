# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = false
# Follows symlinks to check if they're directories; used in modules such as git.
# - If you have symlinks to networked filesystems, consider setting follow_symlinks to false.
follow_symlinks = false

format = '''
((exit_code:$status)(duration:$cmd_duration))
${custom.delimiter}
\[$username@$hostname\]\[$time\] $fill ($git_branch@$git_commit$git_status ${custom.git_message})($hg_branch)($fossil_branch)
\[$directory\](k8s:$kubernetes ${custom.k8s_prod_warning})(docker:$docker_context)(container:$container)(azure:$azure)(aws:$aws) $fill (ssh_keys:${custom.ssh_no_keys}${custom.ssh_keys}(rust:$rust)(python:$python)(conda:$conda))
$character
'''

right_format = '''
'''

[fill]
disabled = false
symbol = ' '
style = 'white'

[package]
# No packge version displayed for the current directory
disabled = true

[os]
# No OS displayed
disabled = true

[username]
disabled = false
show_always = true
style_root = 'bold red'
style_user = 'white'
format = '[$user]($style)'

[hostname]
disabled = false
ssh_only = false
ssh_symbol = '[ssh:](red)'
trim_at = ''
style = 'white'
format = '[$ssh_symbol$hostname]($style)'

[localip]
disabled = false
ssh_only = true

[time]
disabled = false
use_12hr = false
time_format= '%G/%m/%d@%T%z/%Vw/%jd'
style = 'white'
format = '[$time]($style)'

[status]
disabled = false
recognize_signal_code = true
pipestatus = true
pipestatus_separator = '|'
pipestatus_format = '\[$pipestatus\] => [$common_meaning$signal_name$maybe_int]($style)'
format = '[$symbol$status]($style)'

[memory_usage]
disabled = true

[kubernetes]
disabled = false
format = '[($user@$cluster)$context\($namespace\)]($style)'

[docker_context]
disabled = false
style = 'white'
format = '[$context]($style)'

[container]
disabled = false
style = 'white'
format = '[$name]($style)'

[conda]
disabled = false
style = 'white'
truncation_length = 0
ignore_base = true
format = '[$environment]($style)'

[azure]
disabled = false
style = 'white'
format = '[$subscription]($style)'

[aws]
disabled = false
style = 'white'
force_display = false
format = '[($profile)($duration)]($style)'

[rust]
disabled = false
style = 'white'
format = '[$toolchain/$version]($style)'

[python]
disabled = false
style = 'white'
format = '[${pyenv_prefix}${version}(\($virtualenv\))]($style)'

[jobs]
disabled = true

[git_status]
disabled = false
ignore_submodules = false
conflicted = '[∉](bold red)'
diverged = '[⇕](red)'
modified = '[!](red)'
renamed = '[»](red)'
deleted = '[✘](red)'
style = 'white'

[git_metrics]
disabled = true

[git_commit]
disabled = false
commit_hash_length = 8
only_detached = false
tag_disabled = true
style = 'white'
format = '[$hash]($style)'

[git_branch]
disabled = false
truncation_length = 64
only_attached = false
style = 'white'
format = 'git:[$branch]($style)'

[git_state]
disabled = true

[custom.git_message]
disabled = false
command = 'git log -1 --format=%s'
when = true
require_repo = true
description = 'Get git commit message'
style = 'white'
ignore_timeout = false
format = '[$output]($style)'

[env_var]
disabled = true

[directory]
disabled = false
use_os_path_sep = true
truncate_to_repo = false
truncation_length = 20
use_logical_path = true
format = '[$path]($style)'

[cmd_duration]
disabled = false
min_time = 100
show_milliseconds = true
show_notifications = true
min_time_to_notify = 60_000
style = 'white'
format = '[$duration]($style)'

[character]
disabled = false
format = '$symbol'
success_symbol = '[\$](bold green)'
error_symbol = '[\$](bold red)'

[battery]
disabled = true

[custom.delimiter]
disabled = false
description = 'print --- across terminal width'
when = true
command = 'printf "%*s" "$COLUMNS" "" | tr " " "-"'
style = 'bold white'
format = '[$output]($style)'
ignore_timeout = true

[custom.k8s_prod_warning]
disabled = false
description='Shows an indicator when the name of the current kubectl context contains the string `prod` anywhere.'
when='kubectl config current-context | grep -q prod'
command='echo "PROD"'
symbol='⚠️ '
style='bold red'
format='[$symbol($output)]($style)'

[custom.ssh_no_keys]
disabled = false
description = "SSH missing keys"
when = ". ~/.ssh/agent/env/default; ssh-add -l | grep -q 'no identities'"
command = "echo 0"
format = "$symbol[$output]($style) "
shell = ["bash", "--noprofile", "--norc"]
symbol = ""
style = "bold fg:red"

[custom.ssh_keys]
disabled = false
description = "SSH key count"
when = ". ~/.ssh/agent/env/default; ssh-add -l | grep -v -q 'no identities'"
command = ". ~/.ssh/agent/env/default; ssh-add -l | grep -v 'no identities' | wc -l"
format = "$symbol[$output]($style) "
shell = ["bash", "--noprofile", "--norc"]
symbol = ""
style = "bold fg:green"
